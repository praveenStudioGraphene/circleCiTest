version: 2.1

commands:
  bootstrap:
    description: "Bootstrap environment"
    parameters:
      check-for-pr:
        description: "Should check for PR and cancel DRAFT/MERGED"
        default: false
        type: boolean
      os:
        description: "Operating system type for proper checksum generation"
        default: "linux"
        type: enum
        enum: ["linux", "macOS"]
      remove-git:
        description: "Flag indicating the removal of .git folder"
        type: boolean
        default: false
    steps:
      - when:
          condition: << parameters.check-for-pr >>
          steps:
            - run:
                name: Check for PR and cancel DRAFT/MERGED
                command: |
                  if [[ $(echo "$CIRCLE_PULL_REQUEST $CIRCLE_PULL_REQUESTS" | grep -c "pull") -gt 0 ]]; then
                    export CIRCLE_PR_NUMBER=${CIRCLE_PULL_REQUEST##*/}
                    export RESPONSE=$(curl https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/pulls/$CIRCLE_PR_NUMBER?access_token=$GITHUB_TOKEN)
                    export DRAFT=$(echo $RESPONSE | jq ".draft")
                    export DRAFT_LABEL=$(echo $RESPONSE | jq ".labels | map(select(.name | test(\"Draft\"))) | .[]")
                    export MERGED=$(echo $RESPONSE | jq ".merged")
                    if [[ $MERGED = true ]]; then
                      echo "Canceling ${CIRCLE_BUILD_NUM}"
                      curl --silent --show-error -X POST https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/cancel -H 'Accept: application/json' -u $CIRCLE_TOKEN':' > /dev/null
                    fi
                    if [[ $DRAFT = true || $DRAFT_LABEL ]]; then
                      echo "Canceling ${CIRCLE_BUILD_NUM}"
                      curl --silent --show-error -X POST https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/cancel -H 'Accept: application/json' -u $CIRCLE_TOKEN':' > /dev/null
                    fi
                  else
                    echo "Canceling ${CIRCLE_BUILD_NUM}"
                    curl --silent --show-error -X POST https://circleci.com/api/v2/workflow/$CIRCLE_WORKFLOW_ID/cancel -H 'Accept: application/json' -u $CIRCLE_TOKEN':' > /dev/null
                  fi
      - checkout
      - run:
          name: Set environment variables
          command: |
            rm -rf ~/canopy-frontend/.env;
            echo $ENVFILE | base64 -d | tr -d '\r' >> ~/canopy-frontend/.env;
            cat ~/canopy-frontend/.env
            touch .npmrc
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
      - run:
          name: Log node version
          command: |
            node --version
      # - run:
      #     name: Create a hash of patches
      #     command: |
      #       if [[ << parameters.os >> = "linux" ]]; then
      #         md5sum patches/* > patches.hash
      #       elif [[ << parameters.os >> = "macOS" ]]; then
      #         md5 patches/* > patches.hash
      #       else
      #         echo "Unknown operating system"
      #       fi
      - restore_cache:
          name: Restore yarn cache
          keys:
            - yarn-3-{{ arch }}-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - yarn-3-{{ arch }}-{{ checksum "package.json" }}-
            # - yarn-3-{{ arch }}-{{ checksum "patches.hash" }}-
      - run:
          name: "Install dependencies"
          command: |
            yarn install --frozen-lockfile --non-interactive --cache-folder ~/.cache/yarn
      - save_cache:
          name: Save yarn cache
          key: yarn-3-{{ arch }}-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - ~/canopy-frontend/node_modules
      - when:
          condition: << parameters.remove-git >>
          steps:
            - run:
                name: "Remove .git folder"
                command: |
                  rm -rf .git

executors:
  node-executor:
    docker:
      - image: cimg/node:16.14
    working_directory: ~/canopy-frontend
  android-executor:
    docker:
      - image: findyourcanopy/buildfrontenv:android
    working_directory: ~/canopy-frontend
  ios-executor:
    macos:
      xcode: "13.3.0"
    working_directory: ~/canopy-frontend

jobs:
  bootstrap:
    executor: node-executor
    parameters:
      check-for-pr:
        description: "Should check for PR and cancel DRAFT/MERGED"
        default: false
        type: boolean
      remove-git:
        description: "Flag indicating the removal of .git folder"
        type: boolean
        default: false
    steps:
      - bootstrap:
          check-for-pr: << parameters.check-for-pr >>
          os: "linux"
          remove-git: << parameters.remove-git >>
      - persist_to_workspace:
          root: ~/
          paths:
            - canopy-frontend

  lint:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/
      - run: yarn lint:ci
      - run: yarn stylelint:ci

  test:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/
      - run: yarn test:ci
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

  build:
    executor: node-executor
    environment:
      DISABLE_ESLINT_PLUGIN: "true"
      IMAGE_INLINE_SIZE_LIMIT: 0
      INLINE_RUNTIME_CHUNK: "false"
    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Run build
          no_output_timeout: 20m
          command: yarn build

  android:
    executor: android-executor
    resource_class: large
    parameters:
      environment:
        description: "Deployment environment name"
        type: enum
        enum: ["none", "beryllium-development", "boron-development", "staging", "production"]
        default: "none"
    steps:
      - when:
          condition:
            equal: [<< parameters.environment >>, "none"]
          steps:
            - attach_workspace:
                at: ~/
      - unless:
          condition:
            equal: [<< parameters.environment >>, "none"]
          steps:
            - bootstrap:
                os: "linux"
      - run:
          name: Set google-service.json
          command: |
            echo $FIREBASE_ANDROID > ./app/google-services.json
          working_directory: android
      - run:
          name: Overwrite application name and version
          command: |
            if [ << parameters.environment >> = 'beryllium-development' ]; then
              rpl canopyselva canopyselvaberylliumdev app/build.gradle
              rpl app.canopy.rent "selva.beryllium.canopy.rent" app/src/main/AndroidManifest.xml
              rpl go.canopy.rent "go.selva.beryllium.canopy.rent" app/src/main/AndroidManifest.xml
              rpl canopyrenterapp "canopyrenterappberyllium" app/src/main/AndroidManifest.xml
              rpl app.canopy.rent selva.beryllium.canopy.rent app/src/main/res/values/strings.xml
              rpl Canopy "Canopy Beryllium" app/src/main/res/values/strings.xml
            elif [ << parameters.environment >>  = 'boron-development' ]; then
              rpl canopyselva canopyselvaborondev app/build.gradle
              rpl app.canopy.rent "selva.boron.canopy.rent" app/src/main/AndroidManifest.xml
              rpl go.canopy.rent "go.selva.boron.canopy.rent" app/src/main/AndroidManifest.xml
              rpl canopyrenterapp "canopyrenterappboron" app/src/main/AndroidManifest.xml
              rpl app.canopy.rent selva.boron.canopy.rent app/src/main/res/values/strings.xml
              rpl Canopy "Canopy Boron" app/src/main/res/values/strings.xml
            elif [ << parameters.environment >> = 'staging' ]; then
              rpl canopyselva canopyselvastag app/build.gradle
              rpl app.canopy.rent "selva.staging.canopy.rent" app/src/main/AndroidManifest.xml
              rpl go.canopy.rent "go.selva.staging.canopy.rent" app/src/main/AndroidManifest.xml
              rpl canopyrenterapp "canopyrenterappstaging" app/src/main/AndroidManifest.xml
              rpl app.canopy.rent selva.staging.canopy.rent app/src/main/res/values/strings.xml
              rpl Canopy "Canopy Staging" app/src/main/res/values/strings.xml
            elif [ << parameters.environment >> = 'production' ] || [ $(expr $CIRCLE_BRANCH : 'release\/selva-android.*') -gt 0 ]; then
              echo "No changes"
            else
              echo $SNAP_FIREBASE_ANDROID > app/google-services.json
              rpl canopyselva canopyselvasnap app/build.gradle
              rpl Canopy "Snap Canopy" app/src/main/res/values/strings.xml
              rpl app.canopy.rent "selva.snap.canopy.rent" app/src/main/AndroidManifest.xml
              rpl go.canopy.rent "go.selva.snap.canopy.rent" app/src/main/AndroidManifest.xml
            fi
          working_directory: android
      - run:
          name: Set production GTM
          command: |
            if [ << parameters.environment >> = 'production' ] || [ $(expr $CIRCLE_BRANCH : 'release\/selva-android.*') -gt 0 ]; then
              rm -rf GTM-MMZ5JKP.json
              touch GTM-KCRQFKL.json
              echo $GTM_ANDROID > GTM-KCRQFKL.json
            fi
          working_directory: android/app/src/main/assets/containers
      - run:
          name: Set production Facebook AppID
          command: |
            if [ << parameters.environment >> = 'production' ] || [ $(expr $CIRCLE_BRANCH : 'release\/selva-android.*') -gt 0 ]; then
              rpl 219187265551008 1867137223567195 ./strings.xml
              rpl 3adc843fc86c01024ac80ed6a8e050d4 58c35f9a17814a0eb436b3d58dba0f96 ./strings.xml
            fi
          working_directory: android/app/src/main/res/values
      - restore_cache:
          name: Restore bundle cache
          key: bundle-2-{{ arch }}-{{ checksum "android/Gemfile.lock" }}
      - run:
          name: Run bundle install
          command: |
            bundle config set path 'vendor/bundle'
            bundle check || bundle install
          working_directory: android
      - save_cache:
          name: Save bundle cache
          key: bundle-2-{{ arch }}-{{ checksum "android/Gemfile.lock" }}
          paths:
            - android/vendor/bundle
      - restore_cache:
          name: Restore gradle wrapper cache
          key: gradle-wrapper-2-{{ arch }}-{{ checksum "android/gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          name: Restore gradle home cache
          key: gradle-home-2-{{ arch }}-{{ checksum "android/build.gradle" }}-{{ checksum "android/app/build.gradle" }}-{{ checksum "android/settings.gradle" }}
      - restore_cache:
          name: Restore gradle build cache
          key: gradle-build-2-{{ .Revision }}
      - run:
          name: Disperse gradle build caches for restoring
          command: |
            [ -d ~/gradle-build-caches ] &&
            [ -n "$(ls -A ~/gradle-build-caches)" ] &&
            rm -rf ~/.gradle/caches/build-cache-* &&
            mkdir -p ~/.gradle/caches/ &&
            mv ~/gradle-build-caches/* ~/.gradle/caches/ || true
      - restore_cache:
          name: Restore fastlane cache
          key: fastlane-2-{{ arch }}
      - run:
          name: Fastlane
          command: |
            echo "sdk.dir=./androidsdk" > local.properties
            if [ $(expr $CIRCLE_BRANCH : 'release\/selva-android.*') -gt 0 ]; then
            	./gradlew gitVersion
              bundle exec fastlane beta
            elif [ << parameters.environment >> = 'production' ]; then
            	./gradlew gitVersion
              bundle exec fastlane beta
            elif [ << parameters.environment >> = 'staging' ]; then
            	./gradlew gitVersion
              bundle exec fastlane beta
            elif [ << parameters.environment >> = 'beryllium-development' ] || [ << parameters.environment >> = 'boron-development' ]; then
            	./gradlew gitVersion
              bundle exec fastlane beta
            else
            	bundle exec fastlane build
            fi
          working_directory: android
      - save_cache:
          name: Save fastlane cache
          key: fastlane-2-{{ arch }}
          paths:
            - ~/.fastlane
      - save_cache:
          name: Save gradle wrapper cache
          key: gradle-wrapper-2-{{ arch }}-{{ checksum "android/gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - ~/.gradle/wrapper/
      - save_cache:
          name: Save gradle home cache
          key: gradle-home-2-{{ arch }}-{{ checksum "android/build.gradle" }}-{{ checksum "android/app/build.gradle" }}-{{ checksum "android/settings.gradle" }}
          paths:
            - ~/.gradle/caches/
      - run:
          name: Collect gradle build caches for saving
          command: |
            mkdir -p ~/gradle-build-caches
            [ -d ~/.gradle/caches ] &&
            [ -n "$(ls -Ad ~/.gradle/caches/build-cache-* 2>/dev/null)" ] &&
            rm -rf ~/gradle-build-caches/* &&
            mv ~/.gradle/caches/build-cache-* ~/gradle-build-caches || true
      - save_cache:
          name: Saving gradle build cache
          key: gradle-build-2-{{ .Revision }}
          paths:
            - ~/gradle-build-caches
      - when:
          condition:
            equal: [<< parameters.environment >>, "production"]
          steps:
            - store_artifacts:
                path: android/app/beta/outputs
                destination: beta
            - store_artifacts:
                path: android/app/build/outputs
                destination: build

  ios:
    executor: ios-executor
    parameters:
      environment:
        description: "Deployment environment name"
        type: enum
        enum: ["none", "beryllium-development", "boron-development", "staging", "production"]
        default: "none"
    environment:
      FL_OUTPUT_DIR: ~/canopy-frontend/output
      HOMEBREW_NO_AUTO_UPDATE: 1
    shell: /bin/bash --login -o pipefail
    steps:
      - add_ssh_keys:
          fingerprints:
            - "0e:d8:68:51:4b:3c:1d:d0:75:40:95:e6:d7:f0:57:2a"
      - run:
          name: Set ruby version
          command: |
            sed -i '' 's/^chruby.*/chruby ruby-2.7.5/g' ~/.bash_profile
            ruby -v
      - restore_cache:
          name: Restore brew cache
          key: brew-2-{{ arch }}
      - run:
          name: Install rpl
          command: brew install rpl
      - save_cache:
          name: Save brew cache
          key: brew-2-{{ arch }}
          paths:
            - /usr/local/Homebrew
            - ~/Library/Caches/Homebrew
      - bootstrap:
          os: "macOS"
      - restore_cache:
          name: Restore root bundle cache
          key: bundle-root-2-{{ arch }}-{{ checksum "Gemfile.lock" }}
      - run:
          name: Run root bundle install
          command: |
            bundle check || bundle install
      - save_cache:
          key: bundle-root-2-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Set GoogleService-Info.plist
          command: |
            echo $FIREBASE_IOS > ./canopySelva/GoogleService-Info.plist
          working_directory: ios
      - run:
          name: Set App Name
          command: |
            if [ << parameters.environment >> = 'beryllium-development' ]; then
              rpl -R "rent.canopy.selva" "rent.canopy.selva.beryllium.dev" *
              rpl -R "app.canopy.rent" "selva.beryllium.canopy.rent" *
              rpl -R "go.canopy.rent" "go.selva.beryllium.canopy.rent" *
              rpl -R "canopyrenterapp" "canopyrenterappberyllium" *
              rpl -R "canopyselva.page.link" "canopyselvaberylliumdev.page.link" *
              rpl -R Canopy "Canopy Beryllium" canopySelva
            elif [ << parameters.environment >> = 'boron-development' ]; then
              rpl -R "rent.canopy.selva" "rent.canopy.selva.boron.dev" *
              rpl -R "app.canopy.rent" "selva.boron.canopy.rent" *
              rpl -R "go.canopy.rent" "go.selva.boron.canopy.rent" *
              rpl -R "canopyrenterapp" "canopyrenterappboron" *
              rpl -R "canopyselva.page.link" "canopyselvaborondev.page.link" *
              rpl -R Canopy "Canopy Boron" canopySelva
            elif [ << parameters.environment >> = 'staging' ]; then
              rpl -R "rent.canopy.selva" "rent.canopy.selva.stag" *
              rpl -R "app.canopy.rent" "selva.staging.canopy.rent" *
              rpl -R "go.canopy.rent" "go.selva.staging.canopy.rent" *
              rpl -R "canopyrenterapp" "canopyrenterappstaging" *
              rpl -R "canopyselva.page.link" "canopyselvastag.page.link" *
              rpl -R Canopy "Canopy Staging" canopySelva
            elif [ << parameters.environment >> = 'production' ] || [ $(expr $CIRCLE_BRANCH : 'release\/selva-ios.*') -gt 0 ]; then
              echo "No changes required"
            fi
          working_directory: ios
      - run:
          name: Set production GTM
          command: |
            if [ << parameters.environment >> = 'production' ] || [ $(expr $CIRCLE_BRANCH : 'release\/selva-ios.*') -gt 0 ]; then
              rm -rf GTM-N7J446D.json
              touch GTM-5HLVTBJ.json
              echo $GTM_IOS > GTM-5HLVTBJ.json
            fi
          working_directory: ios/container
      - run:
          name: Set production Facebook AppID
          command: |
            if [ << parameters.environment >> = 'production' ] || [ $(expr $CIRCLE_BRANCH : 'release\/selva-ios.*') -gt 0 ]; then
              rpl "219187265551008" "1867137223567195" ./Info.plist
              rpl "219187265551008" "1867137223567195" ./AppDelegate.m
              rpl 3adc843fc86c01024ac80ed6a8e050d4 58c35f9a17814a0eb436b3d58dba0f96 ./Info.plist
            fi
          working_directory: ios/canopySelva
      - restore_cache:
          name: Restore SPM cache
          key: spm-3-{{ arch }}-{{ checksum "ios/canopySelva.xcworkspace/xcshareddata/swiftpm/Package.resolved" }}
      - restore_cache:
          name: Restore bundle cache
          key: bundle-2-{{ arch }}-{{ checksum "ios/Gemfile.lock" }}
      - run:
          name: Run bundle install
          command: |
            bundle config set path 'vendor/bundle'
            bundle check || bundle install
          working_directory: ios
      - save_cache:
          key: bundle-2-{{ arch }}-{{ checksum "ios/Gemfile.lock" }}
          paths:
            - ios/vendor/bundle
      - restore_cache:
          name: Restore cocoapods cache
          key: pods-2-{{ arch }}-{{ checksum "ios/Podfile.lock" }}
      - run:
          name: Install cocoapods
          command: |
            if [ ! -d "Pods" ]; then
              bundle exec "cd ios && pod install"
            else
              echo "Pods restored from cache"
            fi
      - save_cache:
          name: Save cocoapods cache
          key: pods-2-{{ arch }}-{{ checksum "ios/Podfile.lock" }}
          paths:
            - ~/.pods
            - ios/Pods
      - run:
          name: Install Firebase CLI
          command: |
            if [ $(expr $CIRCLE_BRANCH : 'release\/selva-ios.*') -gt 0 ] || [ << parameters.environment >> = 'beryllium-development' ] || [ << parameters.environment >> = 'boron-development' ] || [ << parameters.environment >> = 'staging' ] || [ << parameters.environment >> = 'production' ]; then
              curl -sL firebase.tools | bash
            else
              echo "We don't need firebase here"
            fi
          working_directory: ios
      - restore_cache:
          name: Restore iOS build cache
          key: ios-build-3-{{ arch }}-{{ checksum "package.json" }}
      - restore_cache:
          name: Restore fastlane cache
          key: fastlane-3-{{ arch }}
      - run:
          name: Fastlane
          # ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD=true is required until XCode 14: https://github.com/fastlane/fastlane/issues/20741
          command: |
            if [ $(expr $CIRCLE_BRANCH : 'release\/selva-ios.*') -gt 0 ]; then
            	ITMSTRANSPORTER_FORCE_ITMS_PACKAGE_UPLOAD=true bundle exec fastlane release
            elif [ << parameters.environment >> = 'production' ]; then
            	bundle exec fastlane beta
            elif [ << parameters.environment >> = 'staging' ]; then
            	bundle exec fastlane beta
            elif [ << parameters.environment >> = 'beryllium-development' ] || [ << parameters.environment >> = 'boron-development' ]; then
            	bundle exec fastlane beta
            else
            	bundle exec fastlane build
            fi
          no_output_timeout: 20m
          working_directory: ios
      - save_cache:
          name: Save fastlane cache
          key: fastlane-3-{{ arch }}
          paths:
            - ~/.fastlane
      - save_cache:
          key: ios-build-3-{{ arch }}-{{ checksum "package.json" }}
          name: Save iOS build cache
          paths:
            - ios/build/Build
      - save_cache:
          key: spm-3-{{ arch }}-{{ checksum "ios/canopySelva.xcworkspace/xcshareddata/swiftpm/Package.resolved" }}
          name: Save SPM cache
          paths:
            - ios/SourcePackages
      # Temporary disable artifacts
      # - store_artifacts:
      #     path: /Users/distiller/driver-application/buildlogs/gym/DriverApplication-DriverApplication.log
      #     destination: buildlogs
      # - store_artifacts:
      #     path: ios/release
      #     destination: release
      # - store_artifacts:
      #     path: ios/beta
      #     destination: beta
      # - store_artifacts:
      #     path: ios/build
      #     destination: build
      # - store_artifacts:
      #     path: output
      #     destination: output

workflows:
  version: 2
  pull_request:
    jobs:
      - bootstrap:
          check-for-pr: true
          context: front-end-development
          filters:
            branches:
              only:
                - /^(?!pull\/).*$/
              ignore:
                - staging
                - master
                - /release\/.*/
      - lint:
          requires:
            - bootstrap
      # - test:
      #     requires:
      #       - bootstrap
      - build:
          requires:
            - bootstrap
      - hold:
          type: approval
          requires:
            - bootstrap
            - lint
            # - test
            - build
      - android:
          context: front-end-development
          requires:
            - hold
          filters:
            branches:
              ignore:
                - staging
                - master
                - /release\/.*/
      - ios:
          context: front-end-development
          requires:
            - hold
          filters:
            branches:
              ignore:
                - staging
                - master
                - /release\/.*/

  deploy-development-beryllium:
    jobs:
      - android:
          context: selva-development-beryllium
          environment: "beryllium-development"
          filters:
            branches:
              only:
                - release/2.125.0
      - ios:
          context: selva-development-beryllium
          environment: "beryllium-development"
          filters:
            branches:
              only:
                - release/2.125.0

  deploy-development-boron:
    jobs:
      - android:
          context: selva-development-boron
          environment: "boron-development"
          filters:
            branches:
              only:
                - release/2.124.0

      - ios:
          context: selva-development-boron
          environment: "boron-development"
          filters:
            branches:
              only:
                - release/2.124.0

  deploy-staging:
    jobs:
      - android:
          context: front-end-staging
          environment: "staging"
          filters:
            branches:
              only:
                - staging
      - ios:
          context: front-end-staging
          environment: "staging"
          filters:
            branches:
              only:
                - staging

  deploy-production:
    jobs:
      - android:
          context: front-end-productions
          environment: "production"
          filters:
            branches:
              only:
                - master
      - ios:
          context: front-end-productions
          environment: "production"
          filters:
            branches:
              only:
                - master

  release:
    jobs:
      - android:
          context: front-end-productions
          environment: "production"
          filters:
            branches:
              only:
                - /release\/selva-android.*/
      - ios:
          context: front-end-productions
          environment: "production"
          filters:
            branches:
              only:
                - /release\/selva-ios.*/
