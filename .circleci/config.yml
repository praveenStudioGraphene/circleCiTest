version: 2.1
dependencies:
  pre:
    - rm -rf ~/.yarn
    - npm install -g yarn
    - yarn -v
  override:
    - yarn
  cache_directories:
    - ~/.cache/yarn

executors:
  android-executor:
    docker:
      - image: cimg/android:2022.12
    working_directory: ~/circleCiTest


jobs:
  lint:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/
      - run: yarn lint:ci
      - run: yarn stylelint:ci

  test:
    executor: node-executor
    steps:
      - attach_workspace:
          at: ~/
      - run: yarn test:ci
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

  build:
    working_directory: ~/repo
    docker:
      - image: cimg/node:16.14
    steps:
      - checkout
      - run:
          name: Update NPM
          command: "sudo npm install -g npm@5"
      - restore_cache:
          name: Restore yarn cache
          keys:
            - yarn-3-{{ arch }}-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            - yarn-3-{{ arch }}-{{ checksum "package.json" }}-
      - run:
          name: "Install dependencies"
          command: |
            yarn install --frozen-lockfile --non-interactive --cache-folder ~/.cache/yarn
      # - run:
      #     name: Set environment variables
      #     command: echo 'export DEV_API_KEY="FOO"' >> "$BASH_ENV"
      # - run: # print the name of the branch we're on
      #     name: "What branch am I on?"
      #     command: echo ${CIRCLE_BRANCH}
      # - run:
      #     name: "Print an env var stored in a Context"
      #     command: echo ${CONTEXT_ENV_VAR}
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run tests
          command: npm run test

  android:
    executor: android-executor
    resource_class: large
    parameters:
      environment:
        description: "Deployment environment name"
        type: enum
        enum: ["none", "dev", "production"]
        default: "none"
    steps:
      - when:
          condition:
            equal: [<< parameters.environment >>, "none"]
          steps:
            - attach_workspace:
                at: ~/
      - unless:
          condition:
            equal: [<< parameters.environment >>, "none"]
          steps:
            - bootstrap:
                os: "linux"
      - run:
          name: Set google-service.json
          command: |
            echo $FIREBASE_ANDROID > ./app/google-services.json
          working_directory: android
      - run:
          name: Overwrite application name and version
          command: |
            if [ << parameters.environment >> = 'beryllium-development' ]; then
              rpl canopyselva canopyselvaberylliumdev app/build.gradle
              rpl app.canopy.rent "selva.beryllium.canopy.rent" app/src/main/AndroidManifest.xml
              rpl canopyrenterapp "canopyrenterappberyllium" app/src/main/AndroidManifest.xml
              rpl CircleCiTest "CircleCiTest Staging" app/src/main/res/values/strings.xml
            elif [ << parameters.environment >> = 'dev' ]; then
              rpl canopyselva canopyselvastag app/build.gradle
              rpl canopyrenterapp "canopyrenterappstaging" app/src/main/AndroidManifest.xml
              rpl CircleCiTest "CircleCiTest Dev" app/src/main/res/values/strings.xml
            else
              echo $SNAP_FIREBASE_ANDROID > app/google-services.json
              rpl canopyselva canopyselvasnap app/build.gradle
              rpl Canopy "Snap Canopy" app/src/main/res/values/strings.xml
              rpl app.canopy.rent "selva.snap.canopy.rent" app/src/main/AndroidManifest.xml
            fi
          working_directory: android
      - run:
          name: Set production GTM
          command: |
            if [ << parameters.environment >> = 'production' ] || [ $(expr $CIRCLE_BRANCH : 'release\/selva-android.*') -gt 0 ]; then
              rm -rf GTM-MMZ5JKP.json
              touch GTM-KCRQFKL.json
              echo $GTM_ANDROID > GTM-KCRQFKL.json
            fi
          working_directory: android/app/src/main/assets/containers
      - run:
          name: Set production Facebook AppID
          command: |
            if [ << parameters.environment >> = 'production' ] || [ $(expr $CIRCLE_BRANCH : 'release\/selva-android.*') -gt 0 ]; then
              rpl 219187265551008 1867137223567195 ./strings.xml
              rpl 3adc843fc86c01024ac80ed6a8e050d4 58c35f9a17814a0eb436b3d58dba0f96 ./strings.xml
            fi
          working_directory: android/app/src/main/res/values
      - restore_cache:
          name: Restore bundle cache
          key: bundle-2-{{ arch }}-{{ checksum "android/Gemfile.lock" }}
      - run:
          name: Run bundle install
          command: |
            bundle config set path 'vendor/bundle'
            bundle check || bundle install
          working_directory: android
      - save_cache:
          name: Save bundle cache
          key: bundle-2-{{ arch }}-{{ checksum "android/Gemfile.lock" }}
          paths:
            - android/vendor/bundle
      - restore_cache:
          name: Restore gradle wrapper cache
          key: gradle-wrapper-2-{{ arch }}-{{ checksum "android/gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          name: Restore gradle home cache
          key: gradle-home-2-{{ arch }}-{{ checksum "android/build.gradle" }}-{{ checksum "android/app/build.gradle" }}-{{ checksum "android/settings.gradle" }}
      - restore_cache:
          name: Restore gradle build cache
          key: gradle-build-2-{{ .Revision }}
      - run:
          name: Disperse gradle build caches for restoring
          command: |
            [ -d ~/gradle-build-caches ] &&
            [ -n "$(ls -A ~/gradle-build-caches)" ] &&
            rm -rf ~/.gradle/caches/build-cache-* &&
            mkdir -p ~/.gradle/caches/ &&
            mv ~/gradle-build-caches/* ~/.gradle/caches/ || true
      - restore_cache:
          name: Restore fastlane cache
          key: fastlane-2-{{ arch }}
      - run:
          name: Fastlane
          command: |
            echo "sdk.dir=./androidsdk" > local.properties
            if [ $(expr $CIRCLE_BRANCH : 'release\/selva-android.*') -gt 0 ]; then
            	./gradlew gitVersion
              bundle exec fastlane beta
            elif [ << parameters.environment >> = 'dev' ]; then
            	./gradlew gitVersion
              bundle exec fastlane beta
            else
            	bundle exec fastlane build
            fi
          working_directory: android
      - save_cache:
          name: Save fastlane cache
          key: fastlane-2-{{ arch }}
          paths:
            - ~/.fastlane
      - save_cache:
          name: Save gradle wrapper cache
          key: gradle-wrapper-2-{{ arch }}-{{ checksum "android/gradle/wrapper/gradle-wrapper.properties" }}
          paths:
            - ~/.gradle/wrapper/
      - save_cache:
          name: Save gradle home cache
          key: gradle-home-2-{{ arch }}-{{ checksum "android/build.gradle" }}-{{ checksum "android/app/build.gradle" }}-{{ checksum "android/settings.gradle" }}
          paths:
            - ~/.gradle/caches/
      - run:
          name: Collect gradle build caches for saving
          command: |
            mkdir -p ~/gradle-build-caches
            [ -d ~/.gradle/caches ] &&
            [ -n "$(ls -Ad ~/.gradle/caches/build-cache-* 2>/dev/null)" ] &&
            rm -rf ~/gradle-build-caches/* &&
            mv ~/.gradle/caches/build-cache-* ~/gradle-build-caches || true
      - save_cache:
          name: Saving gradle build cache
          key: gradle-build-2-{{ .Revision }}
          paths:
            - ~/gradle-build-caches
      - when:
          condition:
            equal: [<< parameters.environment >>, "production"]
          steps:
            - store_artifacts:
                path: android/app/beta/outputs
                destination: beta
            - store_artifacts:
                path: android/app/build/outputs
                destination: build



# jobs:
#   lint:
#     executor: node-executor
#     steps:
#       - attach_workspace:
#           at: ~/
#       - run: yarn lint:ci
#       - run: yarn stylelint:ci



#   build:
#     executor: node-executor
#     environment:
#       DISABLE_ESLINT_PLUGIN: "true"
#       IMAGE_INLINE_SIZE_LIMIT: 0
#       INLINE_RUNTIME_CHUNK: "false"
#     steps:
#       - attach_workspace:
#           at: ~/
#       - run:
#           name: Run build
#           no_output_timeout: 20m
#           command: yarn build



workflows:
  version: 2
  pull_request:
    jobs:
      - build:
          requires:
            - bootstrap
      - hold:
          type: approval
          requires:
            - bootstrap
            - lint
            - build
      - android:
          context: front-end-development
          requires:
            - hold
          filters:
            branches:
              ignore:
                - dev
                - master
                - /release\/.*/

  deploy-dev:
    jobs:
      - android:
          context: front-end-dev
          environment: "developement"
          filters:
            branches:
              only:
                - dev
      - ios:
          context: front-end-dev
          environment: "developement"
          filters:
            branches:
              only:
                - dev

  release:
    jobs:
      - android:
          context: front-end-productions
          environment: "production"
          filters:
            branches:
              only:
                - /release\/selva-android.*/
      - ios:
          context: front-end-productions
          environment: "production"
          filters:
            branches:
              only:
                - /release\/selva-ios.*/

